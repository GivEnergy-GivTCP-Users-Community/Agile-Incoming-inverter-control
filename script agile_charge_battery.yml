alias: agile_charge_battery
fields:
  title:
    description: The title of the notification
    example: State change
  message:
    description: The message content
    example: The light is on!
  messagenotenabled:
    description: The message content
    example: failed to run as not enabled!
  messagefailstart:
    description: The message content
    example: system failed to load the start times!
  messagefailend:
    description: The message content
    example: system failed to load the end times!
  messageloadstart:
    description: The message content
    example: system loaded the start times!
  messageloadend:
    description: The message content
    example: system loaded the end times!
  notification_id:
    description: A unique id so notification can be over written
    example: id-001
  ses_detail:
    description: the session detail name
    example: session_1_detail
  ses_cost:
    description: the session cost name
    example: session_1_cost
  ses_start:
    description: the session start name
    example: session_1_start
  ses_end:
    description: the session end name
    example: session_1_end
  ses_enabled:
    description: the session enabled name
    example: session_1_enable
sequence:
  - if:
      - condition: and
        conditions:
          - condition: template
            value_template: "{{states('input_text.'~ses_cost) | float(0) < 0}}"
    then:
      - service: script.agile_fail_email
        data:
          emailmessage: session is negative force charge enabled
          emailtitle: "{{title}}"
          notification_id: "{{notification_id}}"
          notification_type: email
      - service: homeassistant.turn_off
        entity_id: script.agile_charge_battery
  - if:
      - condition: and
        conditions:
          - condition: template
            value_template: "{{is_state('input_boolean.'~ses_enabled, 'on') }}"
          - condition: template
            value_template: >-
              {{(states('sensor.givtcp_**your inverter id**_soc')| float) <
              (states('input_number.target_soc') | float(0)) }}
    then:
      - service: switch.turn_off
        data: {}
        target:
          entity_id: switch.givtcp_**your inverter id**_enable_charge_schedule
      - delay:
          hours: 0
          minutes: 0
          seconds: 30
          milliseconds: 0
      - service: select.select_option
        data:
          option: "{{states('input_text.'~ses_start)}}"
        target:
          entity_id: select.givtcp_**your inverter id**_charge_start_time_slot_1
      - delay:
          hours: 0
          minutes: 0
          seconds: 30
          milliseconds: 0
    else:
      - service: script.agile_fail_email
        data:
          emailmessage: "{{messagenotenabled}}"
          emailtitle: "{{title}}"
          notification_id: "{{notification_id}}"
          notification_type: email
      - service: homeassistant.turn_off
        entity_id: script.agile_charge_battery
  - if:
      - condition: template
        value_template: >-
          "{{ states('select.givtcp_**your inverter id**_charge_start_time_slot_1') !=
          states('input_text.'~ses_start) }}"
    then:
      - service: script.agile_fail_email
        data:
          emailmessage: "{{messagefailstart}}"
          emailtitle: "{{title}}"
          notification_id: "{{notification_id}}"
          notification_type: email
      - service: select.select_option
        data:
          option: "{{states('input_text.'~ses_start)}}"
        target:
          entity_id: select.givtcp_**your inverter id**_charge_start_time_slot_1
      - delay:
          hours: 0
          minutes: 0
          seconds: 30
          milliseconds: 0
  - if:
      - condition: template
        value_template: >-
          "{{ states('select.givtcp_**your inverter id**_charge_start_time_slot_1') !=
          states('input_text.'~ses_start) }}"
    then:
      - service: script.agile_fail_email
        data:
          emailmessage: "{{messagefailstart}}"
          emailtitle: "{{title}}"
          notification_id: "{{notification_id}}"
          notification_type: email
      - service: hassio.addon_restart
        data:
          addon: a6a2857d_givtcp
      - delay:
          hours: 0
          minutes: 2
          seconds: 30
          milliseconds: 0
      - service: script.agile_fail_email
        data:
          emailmessage: giv TCP has been restarted
          emailtitle: "{{title}}"
          notification_id: "{{notification_id}}"
          notification_type: email
      - service: select.select_option
        data:
          option: "{{states('input_text.'~ses_start)}}"
        target:
          entity_id: select.givtcp_**your inverter id**_charge_start_time_slot_1
      - delay:
          hours: 0
          minutes: 0
          seconds: 30
          milliseconds: 0
    else:
      - service: script.agile_fail_email
        data:
          emailmessage: "{{messageloadstart}}"
          emailtitle: "{{title}}"
          notification_id: "{{notification_id}}"
          notification_type: gen
      - delay:
          hours: 0
          minutes: 0
          seconds: 15
          milliseconds: 0
  - service: select.select_option
    data:
      option: "{{states('input_text.'~ses_end)}}"
    target:
      entity_id: select.givtcp_**your inverter id**_charge_end_time_slot_1
  - delay:
      hours: 0
      minutes: 0
      seconds: 30
      milliseconds: 0
  - if:
      - condition: template
        value_template: >-
          "{{ states('select.givtcp_**your inverter id**_charge_end_time_slot_1') !=
          states('input_text.'~ses_end) }}"
    then:
      - service: script.agile_fail_email
        data:
          emailmessage: "{{messagefailend}}"
          emailtitle: "{{title}}"
          notification_id: "{{notification_id}}"
          notification_type: email
      - service: select.select_option
        data:
          option: "{{states('input_text.'~ses_end)}}"
        target:
          entity_id: select.givtcp_**your inverter id**_charge_end_time_slot_1
      - delay:
          hours: 0
          minutes: 0
          seconds: 30
          milliseconds: 0
  - if:
      - condition: template
        value_template: >-
          "{{ states('select.givtcp_**your inverter id**_charge_start_time_slot_1') !=
          states('input_text.'~ses_start) }}"
    then:
      - service: script.agile_fail_email
        data:
          emailmessage: "{{messagefailend}}"
          emailtitle: "{{title}}"
          notification_id: "{{notification_id}}"
          notification_type: email
      - service: hassio.addon_restart
        data:
          addon: a6a2857d_givtcp
      - delay:
          hours: 0
          minutes: 2
          seconds: 30
          milliseconds: 0
      - service: script.agile_fail_email
        data:
          emailmessage: giv TCP has been restarted
          emailtitle: "{{title}}"
          notification_id: "{{notification_id}}"
          notification_type: email
      - service: select.select_option
        data:
          option: "{{states('input_text.'~ses_end)}}"
        target:
          entity_id: select.givtcp_**your inverter id**_charge_start_time_slot_1
      - delay:
          hours: 0
          minutes: 0
          seconds: 30
          milliseconds: 0
    else:
      - service: script.agile_fail_email
        data:
          emailmessage: "{{messageloadend}}"
          emailtitle: "{{title}}"
          notification_id: "{{notification_id}}"
          notification_type: gen
      - delay:
          hours: 0
          minutes: 0
          seconds: 15
          milliseconds: 0
  - service: switch.turn_on
    data: {}
    target:
      entity_id: switch.givtcp_**your inverter id**_enable_charge_schedule
  - delay:
      hours: 0
      minutes: 0
      seconds: 15
      milliseconds: 0
  - service: script.agile_fail_email
    data:
      emailmessage: "{{message}}"
      emailtitle: "{{title}}"
      notification_id: "{{notification_id}}"
      notification_type: email
mode: single
